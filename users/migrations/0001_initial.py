# Generated by Django 5.1.1 on 2024-10-27 19:07

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('public_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('username', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='Nome de Usuário')),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True, verbose_name='E-mail')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo ?')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Super Usuário?')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Super Usuário?')),
                ('groups', models.ManyToManyField(blank=True, related_name='custom_user_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='custom_user_permissions', to='auth.permission')),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='users.user')),
                ('cnpj', models.CharField(blank=True, default='', max_length=18, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='CNPJ inválido. O formato deve ser XX.XXX.XXX/0001-XX.', regex='^\\d{2}\\.\\d{3}\\.\\d{3}/\\d{4}-\\d{2}$')], verbose_name='CNPJ')),
                ('address', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Endereço')),
                ('phone', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='Número de telefone inválido.', regex='^\\(\\d{2}\\) \\d{4,5}-\\d{4}$')], verbose_name='Telefone')),
            ],
            options={
                'abstract': False,
            },
            bases=('users.user',),
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='users.user')),
                ('position', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Cargo')),
                ('cpf', models.CharField(blank=True, default='', max_length=14, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='CPF inválido. O formato deve ser XXX.XXX.XXX-XX.', regex='^\\d{3}\\.\\d{3}\\.\\d{3}-\\d{2}$')], verbose_name='CPF')),
                ('first_name', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Nome')),
                ('last_name', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Sobrenome')),
                ('phone', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='Número de telefone inválido.', regex='^\\(\\d{2}\\) \\d{4,5}-\\d{4}$')], verbose_name='Telefone')),
                ('employee_company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='employees', to='users.company')),
            ],
            options={
                'abstract': False,
            },
            bases=('users.user',),
        ),
        migrations.CreateModel(
            name='ProfileCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='imagens/', verbose_name='Foto')),
                ('description', models.TextField(default='', verbose_name='Descrição')),
                ('company', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to='users.company')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProfileEmployee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='imagens/', verbose_name='Foto')),
                ('description', models.TextField(default='', verbose_name='Descrição')),
                ('employee', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to='users.employee')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['username'], name='users_user_usernam_65d164_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email'], name='users_user_email_6f2530_idx'),
        ),
        migrations.AddConstraint(
            model_name='user',
            constraint=models.UniqueConstraint(fields=('email',), name='unique_email'),
        ),
    ]
